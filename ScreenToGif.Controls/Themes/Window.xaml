<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:n="clr-namespace:ScreenToGif.Controls">

    <!--Buttons-->
    <Style x:Key="Style.Button.TitleBar" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource Brush.TitleBar.Button.Foreground}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="RenderOptions.EdgeMode" Value="Aliased"/>
        <Setter Property="IsTabStop" Value="False"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderThickness="0" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" Focusable="False" RecognizesAccessKey="True" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Brush.TitleBar.Button.Background.Hover}"/>
                            <Setter Property="Foreground" Value="{DynamicResource Brush.TitleBar.Button.Foreground.Hover}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Brush.TitleBar.Button.Background.Pressed}"/>
                            <Setter Property="Foreground" Value="{DynamicResource Brush.TitleBar.Button.Foreground.Pressed}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource Brush.TitleBar.Button.Foreground.Disabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Style.Button.TitleBar.Close" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource Brush.TitleBar.Button.Foreground}"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="RenderOptions.EdgeMode" Value="Aliased"/>
        <Setter Property="IsTabStop" Value="False"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="Transparent" BorderThickness="0" SnapsToDevicePixels="true">
                        <Path Width="46" Height="32" Data="M 18,11 27,20 M 18,20 27,11" Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                              StrokeThickness="1" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#C42B1C"/>
                            <Setter Property="Foreground" Value="#FFFFFF" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#E6C42B1C"/>
                            <Setter Property="Foreground" Value="#B3FFFFFF" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource Brush.TitleBar.Button.Foreground.Disabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Window-->
    <Style TargetType="{x:Type n:ExWindow}">
        <Setter Property="Background" Value="{DynamicResource Brush.Window.Background}"/>
        <Setter Property="Foreground" Value="{DynamicResource Brush.Foreground}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type n:ExWindow}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <Grid Grid.Row="1" x:Name="NonClientAreaElement" Height="32" VerticalAlignment="Top" ZIndex="999">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <Image Grid.Column="0" x:Name="IconImage" Width="22" Height="22" Source="{Binding Icon}" Margin="4"/>

                            <TextBlock Grid.Column="1" x:Name="TitleTextBlock" Margin="4,0,0,0" FontSize="14" Foreground="{DynamicResource Brush.Window.Foreground}"
                                       VerticalAlignment="Center" Text="{TemplateBinding Title}"/>

                            <Grid Grid.Column="2" x:Name="CaptionButtonsGrid" Visibility="Collapsed">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Button Grid.Column="0" x:Name="MinimizeButton" Style="{StaticResource Style.Button.TitleBar}"
                                        Width="46" Height="32" Margin="0,1,0,0" Command="SystemCommands.MinimizeWindowCommand">
                                    <Path Width="46" Height="32" Data="M 18,15 H 28" Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" StrokeThickness="1"/>
                                </Button>

                                <Button Grid.Column="1" x:Name="MaximizeButton" Style="{StaticResource Style.Button.TitleBar}"
                                        Width="46" Height="32" Margin="0,1,0,0" Command="SystemCommands.MaximizeWindowCommand">
                                    <Path Width="46" Height="32" Data="M 18.5,10.5 H 27.5 V 19.5 H 18.5 Z" Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" StrokeThickness="1"/>
                                </Button>

                                <Button Grid.Column="1" x:Name="RestoreButton" Style="{StaticResource Style.Button.TitleBar}" Visibility="Collapsed"
                                        Width="46" Height="32" Margin="0,1,0,0" Command="SystemCommands.RestoreWindowCommand">
                                    <Path Width="46" Height="32" Data="M 18.5,12.5 H 25.5 V 19.5 H 18.5 Z M 20.5,12.5 V 10.5 H 27.5 V 17.5 H 25.5"
                                          Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" StrokeThickness="1"/>
                                </Button>

                                <Button Grid.Column="2" x:Name="CloseButton" Style="{StaticResource Style.Button.TitleBar.Close}"
                                        Width="46" Height="32" Margin="0,1,1,0" Command="SystemCommands.CloseWindowCommand"/>
                            </Grid>
                        </Grid>

                        <Border Grid.Row="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <AdornerDecorator>
                                <ContentPresenter/>
                            </AdornerDecorator>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsActive" Value="False">
                            <Setter TargetName="TitleTextBlock" Property="Foreground" Value="{DynamicResource Brush.Window.Foreground.Inactive}"/>
                        </Trigger>

                        <Trigger Property="ExtendIntoTitleBar" Value="True">
                            <Setter TargetName="IconImage" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="TitleTextBlock" Property="Visibility" Value="Collapsed"/>
                        </Trigger>

                        <Trigger Property="ExtendIntoTitleBar" Value="False">
                            <Setter TargetName="NonClientAreaElement" Property="Grid.Row" Value="0"/>
                        </Trigger>

                        <Trigger Property="WillRenderCustomCaptionButtons" Value="True">
                            <Setter TargetName="CaptionButtonsGrid" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <Trigger Property="ShowMinimizeButton" Value="False">
                            <Setter TargetName="MinimizeButton" Property="Visibility" Value="Collapsed"/>
                        </Trigger>

                        <Trigger Property="ShowMaximizeButton" Value="False">
                            <Setter TargetName="MaximizeButton" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="RestoreButton" Property="Visibility" Value="Collapsed"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ShowMaximizeButton" Value="True"/>
                                <Condition Property="WindowState" Value="Maximized"/>
                            </MultiTrigger.Conditions>

                            <Setter TargetName="MaximizeButton" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="RestoreButton" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ShowMaximizeButton" Value="True"/>
                                <Condition Property="WindowState" Value="Normal"/>
                            </MultiTrigger.Conditions>

                            <Setter TargetName="MaximizeButton" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="RestoreButton" Property="Visibility" Value="Collapsed"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>