<Application x:Class="ScreenToGif.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:ScreenToGif"
             xmlns:c="clr-namespace:ScreenToGif.Controls;assembly=ScreenToGif.Controls"
             Startup="App_Startup" DispatcherUnhandledException="App_DispatcherUnhandledException">

    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!--Themes-->
                <!--<ResourceDictionary Source="/Resources/Colors/VeryDark.xaml"/>-->
                <ResourceDictionary Source="/Resources/Colors/Dark.xaml"/>
                <!--<ResourceDictionary Source="/Resources/Colors/Medium.xaml"/>-->
                <ResourceDictionary Source="/Resources/Colors/Light.xaml"/>

                <!--Localizations-->
                <ResourceDictionary Source="/Resources/Localizations/StringResources.ar.xaml"/>
                <ResourceDictionary Source="/Resources/Localizations/StringResources.cs.xaml"/>
                <ResourceDictionary Source="/Resources/Localizations/StringResources.da.xaml"/>
                <ResourceDictionary Source="/Resources/Localizations/StringResources.de.xaml"/>
                <ResourceDictionary Source="/Resources/Localizations/StringResources.el.xaml"/>
                <ResourceDictionary Source="/Resources/Localizations/StringResources.es-AR.xaml"/>
                <ResourceDictionary Source="/Resources/Localizations/StringResources.es.xaml"/>
                <ResourceDictionary Source="/Resources/Localizations/StringResources.fi.xaml"/>
                <ResourceDictionary Source="/Resources/Localizations/StringResources.fr.xaml"/>
                <ResourceDictionary Source="/Resources/Localizations/StringResources.ja.xaml"/>
                <ResourceDictionary Source="/Resources/Localizations/StringResources.he.xaml"/>
                <ResourceDictionary Source="/Resources/Localizations/StringResources.hu.xaml"/>
                <ResourceDictionary Source="/Resources/Localizations/StringResources.ko.xaml"/>
                <ResourceDictionary Source="/Resources/Localizations/StringResources.it.xaml"/>
                <ResourceDictionary Source="/Resources/Localizations/StringResources.nl.xaml"/>
                <ResourceDictionary Source="/Resources/Localizations/StringResources.pl.xaml"/>
                <ResourceDictionary Source="/Resources/Localizations/StringResources.pt.xaml"/>
                <ResourceDictionary Source="/Resources/Localizations/StringResources.pt-PT.xaml"/>
                <ResourceDictionary Source="/Resources/Localizations/StringResources.ru.xaml"/>
                <ResourceDictionary Source="/Resources/Localizations/StringResources.sw.xaml"/>
                <ResourceDictionary Source="/Resources/Localizations/StringResources.sv.xaml"/>
                <ResourceDictionary Source="/Resources/Localizations/StringResources.tr.xaml"/>
                <ResourceDictionary Source="/Resources/Localizations/StringResources.uk.xaml"/>
                <ResourceDictionary Source="/Resources/Localizations/StringResources.vi.xaml"/>
                <ResourceDictionary Source="/Resources/Localizations/StringResources.zh.xaml"/>
                <ResourceDictionary Source="/Resources/Localizations/StringResources.zh-Hant.xaml"/>
                <ResourceDictionary Source="/Resources/Localizations/StringResources.en.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <!--How to instantiate the notify icon and its inner props? and then bing everything-->
            <c:NotifyIcon x:Key="NotifyIcon" IconSource="/Resources/Logo.ico" NotifyToolTipText="ScreenToGif" Visibility="Collapsed" 
                      LeftClickCommand="{Binding TrayLeftClick}" DoubleLeftClickCommand="{Binding TrayDoubleLeftClick}" MiddleClickCommand="{Binding TrayMiddleClick}">
                <c:NotifyIcon.ContextMenu>
                    <ContextMenu>
                        <!--<c:ExtendedMenuItem Header="{StaticResource S.NewRecording}" Icon="{StaticResource Vector.Record.New}" Command="{Binding OpenRecorder}" InputGestureText="{Binding RecorderGesture, UpdateSourceTrigger=PropertyChanged}" Tag="S.NewRecording"/>-->
                        <!--<c:ExtendedMenuItem Header="{StaticResource S.NewWebcamRecording}" Icon="{StaticResource Vector.Camera.New}" Command="{Binding OpenWebcamRecorder}" InputGestureText="{Binding WebcamRecorderGesture, UpdateSourceTrigger=PropertyChanged}" Tag="S.NewWebcamRecording"/>-->
                        <!--<c:ExtendedMenuItem Header="{StaticResource S.NewBoardRecording}" Icon="{StaticResource Vector.Board.New}" Command="{Binding OpenBoardRecorder}" InputGestureText="{Binding BoardRecorderGesture, UpdateSourceTrigger=PropertyChanged}" Tag="S.NewBoardRecording"/>-->
                        <Separator/>
                        <!--<c:ExtendedMenuItem Header="{StaticResource S.StartUp.Editor}" Icon="{StaticResource Vector.Editor}" Command="{Binding OpenEditor}" InputGestureText="{Binding EditorGesture, UpdateSourceTrigger=PropertyChanged}" Tag="S.StartUp.Editor"/>-->
                        <!--<c:ExtendedMenuItem Header="{StaticResource S.StartUp.Options}" Icon="{StaticResource Vector.Options}" Command="{Binding OpenOptions}" InputGestureText="{Binding OptionsGesture, UpdateSourceTrigger=PropertyChanged}" Tag="S.StartUp.Options"/>-->
                        <!--<c:ExtendedMenuItem Header="{StaticResource S.Feedback.Feedback}" Icon="{StaticResource Vector.Application}" Command="{Binding OpenFeedback}" Tag="S.Feedback.Feedback"/>-->
                        <!--<c:ExtendedMenuItem Header="{StaticResource S.Troubleshoot.Title}" Icon="{StaticResource Vector.Warning}" Command="{Binding OpenTroubleshoot}" Tag="S.Troubleshoot.Title"/>-->
                        <Separator/>
                        <!--<c:ExtendedMenuItem Header="{StaticResource S.Exit}" Icon="{StaticResource Vector.Close}" Command="{Binding ExitApplication}" InputGestureText="{Binding ExitGesture, UpdateSourceTrigger=PropertyChanged}" Tag="S.Exit"/>-->
                    </ContextMenu>
                </c:NotifyIcon.ContextMenu>
            </c:NotifyIcon>

            <!--Focus-->
            <Style x:Key="Style.FocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <!--<Border BorderThickness="3" BorderBrush="{DynamicResource Brush.FocusVisual}" CornerRadius="4" Margin="-4"/>-->
                            <Rectangle Margin="-4" SnapsToDevicePixels="True" Stroke="{DynamicResource Brush.FocusVisual}" StrokeThickness="3" RadiusX="4" RadiusY="4"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--ContextMenu-->
            <Style TargetType="{x:Type ContextMenu}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Grid.IsSharedSizeScope" Value="True"/>
                <Setter Property="Placement" Value="Bottom"/>
                <Setter Property="HorizontalOffset" Value="-5"/>
                <Setter Property="Effect" Value="{DynamicResource Brush.ContextMenu.Shadow}"/>
                <Setter Property="Background" Value="{DynamicResource Brush.ContextMenu.Background}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.ContextMenu.BorderBrush}"/>
                <!--<Setter Property="Foreground" Value="{DynamicResource Element.Foreground.Medium}"/>-->

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContextMenu}">
                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Margin="2" Padding="4" CornerRadius="7" Background="{TemplateBinding Background}">
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--Hyperlink-->
            <Style TargetType="{x:Type Hyperlink}">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Hyperlink.Foreground}"/>
                <Setter Property="TextDecorations" Value="None"/>
                <Setter Property="Cursor" Value="Hand"/>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource Brush.Hyperlink.Background.Hover}"/>
                        <Setter Property="Foreground" Value="{DynamicResource Brush.Hyperlink.Foreground.Hover}"/>
                    </Trigger>

                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{DynamicResource Brush.Hyperlink.Foreground.Disabled}"/>
                    </Trigger>

                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Cursor" Value="No"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--Separator-->
            <Style TargetType="{x:Type Separator}">
                <Setter Property="Background" Value="{DynamicResource Brush.Separator.Background}"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Separator}">
                            <Rectangle Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" Fill="{TemplateBinding Background}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--TextBlock-->
            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Foreground}"/>
                <Setter Property="FontFamily" Value="Segoe UI"/>
            </Style>

            <!--ScrollBar Styles-->
            <Style x:Key="Style.ScrollBar.Button" TargetType="{x:Type RepeatButton}">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Opacity" Value="0"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Path x:Name="Arrow" Stretch="None" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
                                  Fill="{DynamicResource Brush.ScrollBar.Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="True"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="Style.ScrollBar.Thumb" TargetType="{x:Type Thumb}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Background" Value="{DynamicResource Brush.ScrollBar.Foreground}"/>
                <Setter Property="BorderThickness" Value="0"/>
                
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border Background="{TemplateBinding Background}" Margin="{TemplateBinding Padding}" CornerRadius="3"
                                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="Style.ScrollBar.Transparent" TargetType="{x:Type RepeatButton}">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--ScrollBar-->
            <Style TargetType="{x:Type ScrollBar}">
                <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{DynamicResource Brush.ScrollBar.Foreground}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Width" Value="12"/>
                <Setter Property="MinWidth" Value="12"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Opacity="{TemplateBinding Opacity}" CornerRadius="9">
                                <Grid x:Name="Bg" SnapsToDevicePixels="True">
                                    <Grid.RowDefinitions>
                                        <RowDefinition MaxHeight="16"/>
                                        <RowDefinition Height="0.00001*"/>
                                        <RowDefinition MaxHeight="16"/>
                                    </Grid.RowDefinitions>

                                    <RepeatButton Grid.Row="0" x:Name="PART_LineUpButton" Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource Style.ScrollBar.Button}" 
                                                  Content="m1 6q-0.2 0-0.4-0.1-0.2-0.1-0.3-0.2-0.1-0.1-0.2-0.3-0.1-0.2-0.1-0.4 0-0.2 0-0.3 0.1-0.1 0.2-0.3l2.6-3.8q0.1-0.1 0.2-0.2 0.2-0.1 0.3-0.2 0.2-0.1 0.3-0.1 0.2-0.1 0.4-0.1 0.2 0 0.4 0.1 0.1 0 0.3 0.1 0.1 0.1 0.3 0.2 0.1 0.1 0.2 0.2l2.6 3.8q0.1 0.2 0.2 0.3 0 0.1 0 0.3 0 0.2-0.1 0.4-0.1 0.2-0.2 0.3-0.1 0.1-0.3 0.2-0.2 0.1-0.4 0.1z"/>

                                    <Track Grid.Row="1" x:Name="PART_Track" IsDirectionReversed="True" IsEnabled="{TemplateBinding IsMouseOver}">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource Style.ScrollBar.Transparent}"/>
                                        </Track.DecreaseRepeatButton>

                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource Style.ScrollBar.Transparent}"/>
                                        </Track.IncreaseRepeatButton>

                                        <Track.Thumb>
                                            <Thumb x:Name="ScrollThumb" Style="{StaticResource Style.ScrollBar.Thumb}" Width="2"/>
                                        </Track.Thumb>
                                    </Track>

                                    <RepeatButton Grid.Row="2" x:Name="PART_LineDownButton" Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource Style.ScrollBar.Button}" 
                                                  Content="m0 1q0-0.2 0.1-0.4 0.1-0.2 0.2-0.3 0.1-0.1 0.3-0.2 0.2-0.1 0.4-0.1h6q0.2 0 0.4 0.1 0.2 0.1 0.3 0.2 0.1 0.1 0.2 0.3 0.1 0.2 0.1 0.4 0 0.2 0 0.3-0.1 0.1-0.2 0.3l-2.6 3.8q-0.2 0.3-0.5 0.4-0.3 0.2-0.7 0.2-0.4 0-0.7-0.2-0.3-0.1-0.5-0.4l-2.6-3.8q-0.1-0.2-0.2-0.3 0-0.1 0-0.3z"/>
                                </Grid>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="ScrollThumb" Property="Width" Value="6"/>
                                    <Setter TargetName="ScrollThumb" Property="Margin" Value="3,0"/>
                                    <Setter TargetName="PART_LineUpButton" Property="Opacity" Value="1"/>
                                    <Setter TargetName="PART_LineDownButton" Property="Opacity" Value="1"/>
                                </Trigger>

                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.6"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource Brush.ScrollBar.Background}"/>
                    </Trigger>

                    <Trigger Property="Orientation" Value="Horizontal">
                        <Setter Property="Width" Value="Auto"/>
                        <Setter Property="MinWidth" Value="0"/>
                        <Setter Property="Height" Value="12"/>
                        <Setter Property="MinHeight" Value="12"/>
                        <Setter Property="BorderThickness" Value="0,1"/>

                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Opacity="{TemplateBinding Opacity}" CornerRadius="9">
                                        <Grid x:Name="Bg" SnapsToDevicePixels="True">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition MaxWidth="16"/>
                                                <ColumnDefinition Width="0.00001*"/>
                                                <ColumnDefinition MaxWidth="16"/>
                                            </Grid.ColumnDefinitions>

                                            <RepeatButton Grid.Column="0" x:Name="PART_LineLeftButton" Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource Style.ScrollBar.Button}" 
                                                      Content="m0 4q0-0.4 0.2-0.7 0.1-0.3 0.4-0.5l3.8-2.6q0.2-0.1 0.3-0.2 0.1 0 0.3 0 0.2 0 0.4 0.1 0.2 0.1 0.3 0.2 0.1 0.1 0.2 0.3 0.1 0.2 0.1 0.4v6q0 0.2-0.1 0.4-0.1 0.2-0.2 0.3-0.1 0.1-0.3 0.2-0.2 0.1-0.4 0.1-0.3 0-0.6-0.2l-3.8-2.6q-0.3-0.2-0.4-0.5-0.2-0.3-0.2-0.7z" />

                                            <Track Grid.Column="1" x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}">
                                                <Track.DecreaseRepeatButton>
                                                    <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource Style.ScrollBar.Transparent}"/>
                                                </Track.DecreaseRepeatButton>

                                                <Track.IncreaseRepeatButton>
                                                    <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource Style.ScrollBar.Transparent}"/>
                                                </Track.IncreaseRepeatButton>

                                                <Track.Thumb>
                                                    <Thumb x:Name="ScrollThumb" Style="{StaticResource Style.ScrollBar.Thumb}" Height="2"/>
                                                </Track.Thumb>
                                            </Track>

                                            <RepeatButton Grid.Column="2" x:Name="PART_LineRightButton" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource Style.ScrollBar.Button}" 
                                                      Content="m0 7v-6q0-0.2 0.1-0.4 0.1-0.2 0.2-0.3 0.1-0.1 0.3-0.2 0.2-0.1 0.4-0.1 0.3 0 0.6 0.2l3.8 2.6q0.3 0.2 0.4 0.5 0.2 0.3 0.2 0.7 0 0.4-0.2 0.7-0.1 0.3-0.4 0.5l-3.8 2.6q-0.3 0.2-0.6 0.2-0.2 0-0.4-0.1-0.2-0.1-0.3-0.2-0.1-0.1-0.2-0.3-0.1-0.2-0.1-0.4z" />
                                        </Grid>
                                    </Border>
                                    
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="ScrollThumb" Property="Height" Value="6"/>
                                            <Setter TargetName="ScrollThumb" Property="Margin" Value="0,3"/>
                                            <Setter TargetName="PART_LineLeftButton" Property="Opacity" Value="1"/>
                                            <Setter TargetName="PART_LineRightButton" Property="Opacity" Value="1"/>
                                        </Trigger>

                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Opacity" Value="0.6"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>